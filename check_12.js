// An√°lise de viabilidade para 12 jogadores
function check12Players() {
  console.log("=== AN√ÅLISE DE 12 JOGADORES ===\n");
  
  const playerCount = 12;
  const playersPerGame = 4;
  const gamesPerRound = playerCount / playersPerGame;
  
  console.log(`Total de jogadores: ${playerCount}`);
  console.log(`Jogadores por jogo: ${playersPerGame}`);
  console.log(`Jogos por rodada: ${gamesPerRound}`);
  
  if (gamesPerRound === Math.floor(gamesPerRound)) {
    console.log(`‚úÖ Matematicamente VI√ÅVEL (${gamesPerRound} jogos por rodada)`);
    
    // Calcular quantos parceiros √∫nicos cada jogador pode ter
    const totalGames = 4; // cada jogador joga 4 vezes
    const partnersPerPlayer = totalGames; // 1 parceiro diferente por jogo
    const totalPartnersNeeded = playerCount * partnersPerPlayer / 2; // dividido por 2 porque cada parceria √© contada duas vezes
    const maxPossiblePartners = (playerCount - 1); // cada jogador pode fazer parceria com todos os outros exceto ele mesmo
    
    console.log(`\n=== AN√ÅLISE DE PARCEIROS ===`);
    console.log(`Cada jogador precisa de ${partnersPerPlayer} parceiros √∫nicos`);
    console.log(`M√°ximo de parceiros poss√≠veis: ${maxPossiblePartners}`);
    console.log(`Parceiros dispon√≠veis suficientes: ${partnersPerPlayer <= maxPossiblePartners ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
    
    // Calcular total de duplas poss√≠veis
    const totalPossiblePairs = playerCount * (playerCount - 1) / 2; // combina√ß√µes de 2 em 12
    const totalPairsNeeded = playerCount * totalGames / 2; // cada jogador joga 4 vezes, dividido por 2
    
    console.log(`\n=== AN√ÅLISE DE DUPLAS ===`);
    console.log(`Total de duplas poss√≠veis: ${totalPossiblePairs}`);
    console.log(`Total de duplas necess√°rias: ${totalPairsNeeded}`);
    console.log(`Duplas suficientes: ${totalPairsNeeded <= totalPossiblePairs ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
    
    if (totalPairsNeeded <= totalPossiblePairs && partnersPerPlayer <= maxPossiblePartners) {
      console.log(`\nüéæ CONCLUS√ÉO: 12 jogadores √© VI√ÅVEL!`);
      console.log(`Estrutura: 4 rodadas com 3 jogos cada`);
      return true;
    } else {
      console.log(`\n‚ùå CONCLUS√ÉO: 12 jogadores N√ÉO √© vi√°vel matematicamente`);
      return false;
    }
  } else {
    console.log(`‚ùå Matematicamente INVI√ÅVEL (${gamesPerRound} n√£o √© um n√∫mero inteiro)`);
    return false;
  }
}

// Verificar tamb√©m outros n√∫meros menores
function checkSmallerNumbers() {
  console.log("\n=== VERIFICA√á√ÉO DE N√öMEROS MENORES ===\n");
  
  const counts = [8, 12, 16];
  
  counts.forEach(count => {
    const gamesPerRound = count / 4;
    const isViable = gamesPerRound === Math.floor(gamesPerRound);
    
    console.log(`${count} jogadores:`);
    console.log(`  Jogos por rodada: ${gamesPerRound} ${isViable ? '‚úÖ' : '‚ùå'}`);
    console.log(`  Status: ${isViable ? 'VI√ÅVEL' : 'INVI√ÅVEL'}`);
    console.log();
  });
}

check12Players();
checkSmallerNumbers();
